---

################################################################################
### DNS Configuration
################################################################################

- name: Make sure dhcpd.conf includes vms-ansible.conf
  lineinfile:
    state: present
    create: yes
    path: /etc/dhcp/dhcpd.conf
    insertafter: 'include "/etc/dhcp/vms-ubuntu.conf";'
    line: '      include "/etc/dhcp/vms-ansible.conf";'
    owner: root
    group: root
    mode: '0644'
  register: __libvirt_dhcpd_include

- name: Configure a DHCP entry for VMs
  lineinfile:
    state: "{{ (libvirt_vm_state == 'create') | ternary('present', 'absent') }}"
    create: yes
    path: /etc/dhcp/vms-ansible.conf
    regexp: "^host {{ item.key }}"
    line: "host {{ item.key }} { hardware ethernet {{ item.value.mac }}; fixed-address {{ item.value.ip }}; }"
    owner: root
    group: root
    mode: '0644'
  register: __libvirt_dhcp_entries_updated
  with_dict: "{{ __libvirt_vms }}"

- name: Restart DHCP service
  service:
    state: restarted
    name: dhcpd
  when:
    - (__libvirt_dhcp_entries_updated | changed) or
      (__libvirt_dhcpd_include | changed)

################################################################################
### DNS Configuration
################################################################################

# In a real wold, `key_name` and `key_secret` Should be stored in Ansible Vault file
- name: Grab the TSIG key
  shell: >
    grep key {{ libvirt_dns_key }} | awk '{ print $2 }'
  register: __libvirt_dns_key_name
  changed_when: False

- name: Grab the TSIG secret
  shell: >
    grep secret {{ libvirt_dns_key }} | tr -d ';' | awk '{ print $2 }'
  register: __libvirt_dns_key_secret
  changed_when: False

- name: Configure DNSs for VMs
  nsupdate:
    state: "{{ (libvirt_vm_state == 'create') | ternary('present', 'absent') }}"
    server: "{{ libvirt_dns_server }}"
    type: A
    ttl: 60
    zone: "{{ libvirt_dns_zone }}"
    value: "{{ item.value.ip }}"
    record: "{{ item.key }}"
    key_name: "{{ (__libvirt_dns_key_name.stdout) | replace('\"', '') | replace('{', '') }}"
    key_secret: "{{ (__libvirt_dns_key_secret.stdout) | replace('\"', '') }}"
  with_dict: "{{ __libvirt_vms }}"

- name: Wait for VMs to be reachable on SSH through their DNS
  wait_for:
    state: "{{ (libvirt_vm_state == 'create') | ternary('started', 'absent') }}"
    host: "{{ item.key }}.{{ libvirt_dns_zone }}"
    port: 22
    delay: 0
    timeout: 30
  with_dict: "{{ __libvirt_vms }}"